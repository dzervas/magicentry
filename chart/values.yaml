# Default values for audiobookshelf.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/dzervas/magicentry
  pullPolicy: IfNotPresent
  tag:

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""
  cluster: true

podAnnotations: {}
podLabels: {}

nodeSelector: {}

podSecurityContext: {}

terminationGracePeriodSeconds: 30

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: false
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /login
    port: http

readinessProbe:
  httpGet:
    path: /login
    port: http

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

tolerations: []

affinity: {}

persistence:
  enabled: false
  # storageClass: ""
  accessModes:
    - ReadWriteOnce
  size: 128Mi

config:
  database_url: /db/database.db

  listen_host: 0.0.0.0
  listen_port: 80
  path_prefix: /
  external_url: http://localhost:8080

  link_duration: 1h
  session_duration: 1mon
  oidc_code_duration: 1m

  title: MagicEntry

  auth_url_enable: true
  auth_url_user_header: X-Auth-User
  auth_url_name_header: X-Auth-Name
  auth_url_email_header: X-Auth-Email
  auth_url_realms_header: X-Auth-Realms

  smtp_enable: false
  # For the URL scheme options see https://docs.rs/lettre/latest/lettre/transport/smtp/struct.AsyncSmtpTransport.html#method.from_url
  smtp_url: smtp://user@pass:localhost:25/?tls=required
  smtp_from: "{title} <magicentry@example.com>"
  smtp_subject: "{title} Login"
  smtp_body: "Click the link to login: {magic_link}"

  request_enable: true
  request_url: https://www.cinotify.cc/api/notify
  request_data: "to={email}&subject={title} Login&body=Click the link to login: <a href=\"{magic_link}\">Login</a>&type=text/html"
  request_method: POST
  request_content_type: application/x-www-form-urlencoded

  webauthn_enable: true

  services: []
    # - name: example
    #   url: https://mysvc.example.com
    #   realms:
    #     - example
    #   auth_url:
    #     origins:
    #       - https://mysvc.example.com
    #   valid_origins:
    #   oidc:
    #     client_id: my_client
    #     client_secret: my_secret
    #     redirect_urls:
    #       - https://mysvc.example.com/callback
    #   saml:
    #     entity_id: example
    #     redirect_urls:
    #       - https://mysvc.example.com

  users: []
    # - username: valid
    #   name: Valid User
    #   email: valid@example.com
    #   realms:
    #     - example
    # - username: integration
    #   email: valid-integration@example.com
    #   name: Integration User
    #   realms:
    #     - example
    #     - public
