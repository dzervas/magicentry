name: Docker Build
on:
  push:
    branches:
      - main
    tags:
      - v*
    paths:
      - .cargo/**
      - Cargo.toml
      - src/**
      - .github/workflows/docker.yaml
  pull_request:
    branches:
      - main
    paths:
      - .cargo/**
      - Cargo.*
      - src/**
      - .github/workflows/test.yaml
  workflow_call:
    inputs:
      app:
        required: true
        type: string
      new_ref:
        required: true
        type: string

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature:
          - default
          - kube
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.new_ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          # org.opencontainers.image.created=
          flavor: |
            prefix=${{ matrix.feature != 'default' && format('{0}-', matrix.feature) || '' }},onlatest=true
          annotations: |
            org.opencontainers.image.title=MagicEntry
            org.opencontainers.image.description=A simple identity provider for human beings
            org.opencontainers.image.vendor=dzervas
            org.opencontainers.image.authors=Dimitris Zervas <dzervas@dzervas.gr>
            org.opencontainers.image.url=https://magicentry.rs
            org.opencontainers.image.documentation=https://magicentry.rs
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ inputs.app }}
            org.opencontainers.image.revision=v${{ inputs.app }}
          tags: |
            type=sha

            type=raw,value=latest,enable=${{ (github.event_name == 'push' && github.ref_type == 'tag') || inputs.app != '' }}
            type=raw,value=v${{ inputs.app }},enable=${{ inputs.app != '' }}
            type=ref,event=branch,enable=${{ (github.event_name == 'push' && github.ref_type == 'branch') || inputs.app != '' }}

      - name: Cache
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            app-target
            usr-local-cargo-git-db
            usr-local-cargo-registry
          key: magicentry-docker-cache-${{ hashFiles('Dockerfile') }}-${{ matrix.feature }}

      - name: Inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "app-target": "/app/target",
              "usr-local-cargo-git-db": "/usr/local/cargo/git/db",
              "usr-local-cargo-registry": "/usr/local/cargo/registry"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Docker Build
        uses: docker/build-push-action@v6
        with:
          context: . # Otherwise it falls back to the reference this action was fired
          cache-from: type=gha,scope=magicentry-${{ matrix.feature }}
          cache-to: type=gha,mode=max,scope=magicentry-${{ matrix.feature }}
          push: true
          build-args: |
            FEATURES=${{ matrix.feature }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
